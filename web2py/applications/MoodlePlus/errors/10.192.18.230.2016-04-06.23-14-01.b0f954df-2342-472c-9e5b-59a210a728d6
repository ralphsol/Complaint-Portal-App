(dp1
S'output'
p2
S"<class 'sqlite3.IntegrityError'> column entry_no is not unique"
p3
sS'layer'
p4
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\applications\\MoodlePlus\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Welcome on Moodle+")\n    return dict(noti_count=4)\n\ndef grades():\n    grades = db(db.grades.user_id==auth.user.id).select()\n    courses = []\n    for grade in grades:\n        courses.append(db(db.courses.id==grade.registered_course_id.course_id).select().first())\n    return dict(grades=grades, courses=courses)\n\ndef notifications():\n    noti = db(db.notifications.user_id==auth.user.id).select(orderby=~db.notifications.created_at)\n    db(db.notifications.user_id==auth.user.id).update(is_seen=1)\n    return dict(notifications=noti)\n\n\ndef logged_in():\n    return dict(success=auth.is_logged_in(), user=auth.user)\n\ndef logout():\n    return dict(success=True, loggedout=auth.logout())\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@request.restful()\ndef api():\n    response.view = \'generic.\'+request.extension\n    def GET(*args,**vars):\n        patterns = \'auto\'\n        parser = db.parse_as_rest(patterns,args,vars)\n        if parser.status == 200:\n            return dict(content=parser.response)\n        else:\n            raise HTTP(parser.status,parser.error)\n    def POST(table_name,**vars):\n        return db[table_name].validate_and_insert(**vars)\n    def PUT(table_name,record_id,**vars):\n        return db(db[table_name]._id==record_id).update(**vars)\n    def DELETE(table_name,record_id):\n        return db(db[table_name]._id==record_id).delete()\n    return dict(GET=GET, POST=POST, PUT=PUT, DELETE=DELETE)\n\ndef login():\n    userid = request.vars.userid\n    password = request.vars.password\n    user = auth.login_bare(userid,password)\n    return dict(success=False if not user else True, user=user)\n\n###EDIT\'s start###\n\n@auth.requires_login()\ndef newuser():\n    if auth.user.id != 8:\n        return dict(success=False)\n    try:\n        first_name = str(request.vars["first_name"])\n    except Exception, e:\n        raise e\n    try:\n        last_name = str(request.vars["last_name"])\n    except Exception, e:\n        raise e\n    try:\n        email = str(request.vars["email"])\n    except Exception, e:\n        raise e\n    try:\n        username = str(request.vars["username"])\n    except Exception, e:\n        raise e\n    try:\n        entry_no = str(request.vars["entry_no"])\n    except Exception, e:\n        raise e\n    try:\n        type_ = str(request.vars["type_"])\n    except Exception, e:\n        raise e\n    try:\n        password = str(request.vars["password"])\n    except Exception, e:\n        raise e\n    try:\n        hostel = str(request.vars["hostel"])\n    except Exception, e:\n        raise e\n    db.users.insert(first_name=first_name,last_name=last_name,email=email,username=username,entry_no=entry_no,type_=type_,password=password,hostel=hostel)\n    return dict(val=db.users())\n\n\'\'\'\ndef new_resource():\n    db.images.insert(picture = "C:\\Users\\Harshil\\Desktop\\GSoC\\Proposal\\id.png", picture_file="C:\\Users\\Harshil\\Desktop\\GSoC\\Proposal\\id.png")\n    return dict(val = db.images())\n\'\'\'\n\n@auth.requires_login()\ndef new_resource():#for complaints, facing foreign key constraint failed error ; http://10.192.46.248:8000/new_resource.json?name=seqresc&file_=C:\\Users\\Harshil\\Desktop\\GSoC\\Proposal\\id.png\n    try:\n        name = str(request.vars["name"])\n    except Exception, e:\n        raise e\n    try:\n        file_ = str(request.vars["file_"])\n    except Exception, e:\n        raise e\n    #db.compresc.insert(name=name, file_=file("C:\\Users\\Harshil\\Desktop\\GSoC\\Proposal\\sequence_diagram.png") )\n    db.compresc.insert(name=name, user_id=auth.user.id, file_=file(file_) )\n    return dict(val=db.compresc())\n\ndef complaintlist_sorted():#list of all complaints ; /complaintlist_sorted.json/<value> ; value is 0 then by upvotes ; 1 then by latest ; else normally\n    try:\n        value = int(request.args[0])\n    except Exception, e:\n        raise e\n    if value==0:\n        complaints = db(db.complaints).select(orderby=~db.complaints.upvote)\n        return dict(complaints=complaints)\n    elif value==1:\n        complaints = db(db.complaints).select(orderby=~db.complaints.created_at)\n        return dict(complaints=complaints)\n    else:\n        complaints = db(db.complaints).select()\n        return dict(complaints=complaints)\n\ndef complaintlist():#list of all complaints ; /complaintlist.json\n    complaints = db(db.complaints).select()\n    return dict(complaints=complaints)\n\ndef mycomplaints():\n    complaints = db(db.complaints).select()\n    res = []\n    for complaint in complaints:\n        if complaint.user_id==auth.user.id:\n            res.append(complaint)\n    return dict(mycomplaints=res)\n\ndef allcomplaints():\n    complaints = db(db.complaints).select()\n    res = []\n    hostel = ""\n#    for user in db.users:\n#        if user.user_id==complaint.user_id:\n#            hostel = user.hostel\n    for complaint in complaints:\n        if complaint.type_==0:\n            if complaint.user_id==auth.user.id:\n                res.append(complaint)\n        elif complaint.type_==1:\n            if db(db.users.id==complaint.user_id).select().first().hostel==auth.user.hostel:\n                res.append(complaint)\n        elif complaint.type_==2:\n            res.append(complaint)\n    return dict(mycomplaints=res)\n\ndef userlist():#list of all users ; /userlist.json\n    return dict(val=db(db.users).select())\n\n@auth.requires_login()\ndef newcomplaint():# ; /newcomplaint.json?comp_type=<comp_type>&title=<title>&description=<description>&assignedval=<assignedval>&anonymity=<anonymity>\n    if ("comp_type" in request.vars) and ("description" in request.vars):\n        comp_type = int(request.vars["comp_type"])\n        description = str(request.vars["description"]).strip()\n        title = str(request.vars["title"]).strip()\n        assignedval = int(request.vars["assignedval"]) #0 for electrician, 1 for plumber, 2 for warden, 3 for dean\n        anonymity = int(request.vars["anonymity"]) #0 for public, 1 for anonymous\n        users = []\n        assignedtol=3\n        if comp_type==0:\n            resolver = auth.user.id\n            users.append(auth.user)\n            if assignedval==0:\n                assignedtol= (2*auth.user.hostel) + 2\n            elif assignedval==1:\n                assignedtol= (2*auth.user.hostel) + 2\n        elif comp_type==1:\n            resolver = auth.user.hostel\n            if assignedval==2:\n                assignedtol= auth.user.hostel\n            for val in db(db.users.hostel==auth.user.hostel).select():\n                users.append(val)\n        elif comp_type==2:\n            resolver = 3\n            if assignedval==2:\n                assignedtol= 3\n            for val in db(db.users).select():\n                users.append(val)\n        cid = db.complaints.insert(user_id=auth.user.id, type_=comp_type, title=title, description=description, resolved=False, resolver=resolver, assignedto=assignedtol, anonymity=anonymity)\n        for user in users:\n            db.notifications.insert(user_id=user.id, description="%s posted a new complaint for %s"%((auth.user.first_name+" "+auth.user.last_name).title(), title))\n        \'\'\'\n        if comp_type==0:\n            users.append(auth.user.id)\n        elif comp_type==1:\n            users = (db.users.hostel==auth.user.hostel)\n        elif comp_type==2:\n            users = db.users\n        for user in users:\n            db.notifications.insert(user_id=user, description="%s posted a new complaint for %s"%((auth.user.first_name+" "+auth.user.last_name).title(), title))\n        \'\'\'\n        return dict(success=True, cid=cid)\n    else:\n        return dict(success=False)\n\n@auth.requires_login()\ndef resolve():#resolves complaint (input = complaint_id) ; /resolve.json/<complaint_id>\n    try:\n        cid = int(request.args[0])\n    except Exception, e:\n        raise e\n    if (db(db.complaints.id==cid).select().first().resolver)==auth.user.id:\n        db(db.complaints.id==cid).update(resolved = True)\n        return dict(success=True)\n    return dict(success=False)\n    #return dict(val=db(db.complaints.id==cid).select().first().resolver)\n\n@auth.requires_login()\ndef complaint():#return complaint with comments (input = complaint_id) ; /complaint.json/<complaint_id>\n    try:\n        cid = int(request.args[0])\n    except Exception, e:\n        raise e\n    complaints = db(db.complaints.id==cid).select().first()\n    comments, comment_users = get_comments(cid)\n    tags, tag_users = get_tags(cid)\n    return dict(complaints=complaints, comments=comments, comment_users=comment_users, tags=tags, tag_users=tag_users)\n\ndef get_comments(complaint_id):#caller function\n    comments =  db(db.comcomp.complaint_id==complaint_id).select()\n    comment_users = []\n    for comment in comments:\n        comment_users.append(db(db.users.id==comment.user_id).select().first())\n    return comments, comment_users\n\ndef get_tags(complaint_id):#caller function\n    tags =  db(db.comtag.complaint_id==complaint_id).select()\n    tag_users = []\n    for tag in tags:\n        tag_users.append(db(db.users.id==tag.user_id).select().first())\n    return tags, tag_users\n\n@auth.requires_login()\ndef upvote():#mark vote ; /upvote.json?complaint_id=<cid>\n    try:\n        cid = int(request.vars["complaint_id"])\n    except Exception, e:\n        raise e\n    for val in db(db.vote.complaint_id==cid).select():\n        if val.user_id==auth.user.id:\n            return dict(success=False)\n    val = db(db.complaints.id==cid).select().first().upvote\n    val = val + 1\n    db(db.complaints.id==cid).update(upvote = val)\n    db.vote.insert(complaint_id=cid, user_id=auth.user.id, type_=1)\n    return dict(val = db(db.complaints.id==cid).select())\n\n@auth.requires_login()\ndef downvote():#mark vote ; /downvote.json?complaint_id=<cid>\n    try:\n        cid = int(request.vars["complaint_id"])\n    except Exception, e:\n        raise e\n    for val in db(db.vote.complaint_id==cid).select():\n        if val.user_id==auth.user.id:\n            return dict(success=False)\n    val = db(db.complaints.id==cid).select().first().downvote\n    val = val + 1\n    db(db.complaints.id==cid).update(downvote = val)\n    db.vote.insert(complaint_id=cid, user_id=auth.user.id, type_=-1)\n    return dict(val = db(db.complaints.id==cid).select())\n\n@auth.requires_login()\ndef put_comment():\n    try:\n        cid = int(request.vars["complaint_id"])\n    except Exception, e:\n        raise e\n    try:\n        desc = str(request.vars["description"])\n    except Exception, e:\n        raise e\n    db.comcomp.insert(complaint_id=cid, user_id=auth.user.id, description=desc)\n    return dict(val = db(db.complaints.id==cid).select())\n\n@auth.requires_login()\ndef put_tag():\n    try:\n        cid = int(request.vars["complaint_id"])\n    except Exception, e:\n        raise e\n    try:\n        desc = str(request.vars["description"])\n    except Exception, e:\n        raise e\n    db.comtag.insert(complaint_id=cid, user_id=auth.user.id, description=desc)\n    return dict(val = db(db.complaints.id==cid).select())\n\n###EDIT\'s end###\n\ndef populate_db():\n    ## Populate DB Script\n\n    ## clear database\n    for table in db.tables():\n            try:\n                    db(db[table].id>0).delete()\n                    print "Cleared",table\n            except Exception, e:\n                    print "Couldn\'t clear",table\n\n    ## create 3 students\n    db.users.insert(\n            first_name="Saiesvar",  # Kumaon\n            last_name="Vipparathy",\n            email="cs1140266@cse.iitd.ac.in",\n            username="cs1140266",\n            entry_no="2014CS10266",\n            type_=0,\n            password="saiesvar",\n    )\n\n    db.users.insert(\n            first_name="Harshil",   # Girnar\n            last_name="Meena",\n            email="cs1140222@cse.iitd.ac.in",\n            username="cs1140222",\n            entry_no="2014CS10222",\n            type_=0,\n            password="harshil",\n    )\n\n    db.users.insert(\n            first_name="Nagaraju",  # Girnar\n            last_name="Ajmeera",\n            email="cs1140208@cse.iitd.ac.in",\n            username="cs1140208",\n            entry_no="2014CS10208",\n            type_=0,\n            password="nagaraju",\n    )\n\n\n    ## create 2 wardens + 1 dean\n\n    db.users.insert(\n            first_name="Warden",\n            last_name="Kumaon",\n            email="wardenkumaon@cse.moodle.in",\n            username="wardenkumaon",\n            entry_no="wardenkumaon",\n            type_=1,\n            password="wardenkumaon",\n    )\n\n    db.users.insert(\n            first_name="Warden",\n            last_name="Girnar",\n            email="wardengirnar@cse.iitd.ac.in",\n            username="wardengirnar",\n            entry_no="wardengirnar",\n            type_=1,\n            password="wardengirnar",\n    )\n\n\n    db.users.insert(\n            first_name="Dean",\n            last_name="Student Welfare",\n            email="dean@cse.iitd.ac.in",\n            username="dean",\n            entry_no="dean",\n            type_=1,\n            password="dean",\n    )\n\n    ## create 3 individual courses + 2 hostel courses + 1 insti course\n    db.courses.insert(\n            name="saiesvarcourse",\n            code="saiesvarcourse",\n            description="none",\n            credits=3,\n            l_t_p="none"\n    )\n\n    db.courses.insert(\n            name="harshilcourse",\n            code="harshilcourse",\n            description="none",\n            credits=3,\n            l_t_p="none"\n    )\n\n    db.courses.insert(\n            name="nagarajucourse",\n            code="nagarajucourse",\n            description="none",\n            credits=3,\n            l_t_p="none"\n    )\n\n    db.courses.insert(\n            name="kumaoncourse",\n            code="kumaoncourse",\n            description="none",\n            credits=3,\n            l_t_p="none"\n    )\n\n    db.courses.insert(\n            name="girnarcourse",\n            code="girnarcourse",\n            description="none",\n            credits=3,\n            l_t_p="none"\n    )\n\n    db.courses.insert(\n            name="iitcourse",\n            code="iitcourse",\n            description="none",\n            credits=3,\n            l_t_p="none"\n    )\n\n\n\n    ## create 7 registered courses\n    db.registered_courses.insert(\t\n            course_id=1,\n            professor=1,\n            year_=2016,\n            semester=2,\n            starting_date=datetime(2016,1,1),\n            ending_date=datetime(2016,5,10),\n    )\n\n    db.registered_courses.insert(\n            course_id=2,\n            professor=2,\n            year_=2016,\n            semester=2,\n            starting_date=datetime(2016,1,1),\n            ending_date=datetime(2016,5,10),\n    )\n\n    db.registered_courses.insert(\n            course_id=3,\n            professor=3,\n            year_=2016,\n            semester=2,\n            starting_date=datetime(2016,1,1),\n            ending_date=datetime(2016,5,10),\n    )\n\n    db.registered_courses.insert(\n            course_id=4,\n            professor=4,\n            year_=2016,\n            semester=2,\n            starting_date=datetime(2016,1,1),\n            ending_date=datetime(2016,5,10),\n    )\n\n    db.registered_courses.insert(\n            course_id=5,\n            professor=5,\n            year_=2016,\n            semester=2,\n            starting_date=datetime(2016,1,1),\n            ending_date=datetime(2016,5,10),\n    )\n\n    db.registered_courses.insert(\n            course_id=6,\n            professor=6,\n            year_=2016,\n            semester=2,\n            starting_date=datetime(2016,1,1),\n            ending_date=datetime(2016,5,10),\n    )\n\n\n    ## register 3 students for 5 courses each out of 7 registered courses\n    db.student_registrations.insert(student_id=1,registered_course_id=4)\n    db.student_registrations.insert(student_id=2,registered_course_id=5)\n    db.student_registrations.insert(student_id=3,registered_course_id=5)\n    db.student_registrations.insert(student_id=1,registered_course_id=6)\n    db.student_registrations.insert(student_id=2,registered_course_id=6)\n    db.student_registrations.insert(student_id=3,registered_course_id=6)\n\n\n\n    ## Create Static Variables\n    db.static_vars.insert(\n            name="current_year",\n            int_value=2016,\n            string_value="2016"\n    )\n\n    db.static_vars.insert(\n            name="current_sem",\n            int_value=2,\n            string_value="2"\n    )\n\ndef api():\n    return """\nMoodle Plus API (ver 1.0)\n-------------------------\n\nUrl: /default/login.json\nInput params:\n    userid: (string)\n    password: (string)\nOutput params:\n    success: (boolean) True if login success and False otherwise\n    user: (json) User details if login is successful otherwise False\n\n\nUrl: /default/logout.json\nInput params:\nOutput params:\n    success: (boolean) True if logout successful and False otherwise\n\n\nUrl: /courses/list.json\nInput params:\nOutput params:\n    current_year: (int)\n    current_sem: (int) 0 for summer, 1 break, 2 winter\n    courses: (List) list of courses\n    user: (dictionary) user details\n\nUrl: /threads/new.json\nInput params:\n    title: (string) can\'t be empty\n    description: (string) can\'t be empty\n    course_code: (string) must be a registered courses\nOutput params:\n    success: (bool) True or False depending on whether thread was posted\n    thread_id: (bool) id of new thread created\n\n    """\n\nresponse._vars=response._caller(newuser)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of IntegrityError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of IntegrityError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of IntegrityError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of IntegrityError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of IntegrityError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of IntegrityError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of IntegrityError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of IntegrityError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.IntegrityError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of IntegrityError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of IntegrityError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of IntegrityError object>"
p45
sS'args'
p46
S"('column entry_no is not unique',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of IntegrityError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of IntegrityError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of IntegrityError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of IntegrityError object>"
p57
ssS'evalue'
p58
S'column entry_no is not unique'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\xc1R\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>MoodlePlus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>10.192.18.230</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_moodleplus</td><td style="vertical-align:top;">:</td><td><div>10.192.18.230-9da07c78-5645-458e-bd7e-a40614e62df8<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>Keep-Alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_moodleplus=10.192.18.230-9da07c78-5645-458e-bd7e-a40614e62df8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>10.192.6.231:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Dalvik/1.6.0 (Linux; U; Android 4.4.2; GT-I9192 Build/KOT49H)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/default/newuser.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>first_name=&amp;last_name=&amp;email=&amp;username=&amp;entry_no=&amp;type_=&amp;password=&amp;hostel=</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>10.192.18.230</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>47224</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Harshil\\\\Desktop\\\\Acads\\\\COP 290\\\\Assignment 1\\\\moodle-plus\\\\applications\\\\MoodlePlus\\\\&#x27;, &#x27;C:\\\\Users\\\\Harshil\\\\Desktop\\\\Acads\\\\COP 290\\\\Assignment 1\\\\moodle-plus\\\\applications\\\\admin\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1f53300: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;2001:0:9d38:90d7:188d:719:f53f:f918&#x27;, &#x27;10.192.6.231&#x27;, &#x27;fe80::188d:719:f53f:f918%7&#x27;, &#x27;fe80::840:2412:40d7:393f%5&#x27;, &#x27;fe80::c977:e3a8:3196:b8a7%18&#x27;, &#x27;192.168.56.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;admin&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Harshil\\\\Desktop\\\\Acads\\\\COP 290\\\\Assignment 1\\\\moodle-plus&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>Keep-Alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_moodleplus=10.192.18.230-9da07c78-5645-458e-bd7e-a40614e62df8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>10.192.6.231:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Dalvik/1.6.0 (Linux; U; Android 4.4.2; GT-I9192 Build/KOT49H)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>2001:0:9d38:90d7:188d:719:f53f:f918</div></td></tr><tr><td><div>fe80::188d:719:f53f:f918%7</div></td></tr><tr><td><div>admin</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::840:2412:40d7:393f%5</div></td></tr><tr><td><div>10.192.6.231</div></td></tr><tr><td><div>192.168.56.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>fe80::c977:e3a8:3196:b8a7%18</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/default/newuser.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>first_name=&amp;last_name=&amp;email=&amp;username=&amp;entry_no=&amp;type_=&amp;password=&amp;hostel=</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>10.192.18.230</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>47224</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/MoodlePlus/default/newuser.json?first_name=&amp;last_name=&amp;email=&amp;username=&amp;entry_no=&amp;type_=&amp;password=&amp;hostel=</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_original_uri</td><td style="vertical-align:top;">:</td><td><div>/default/newuser.json?first_name=&amp;last_name=&amp;email=&amp;username=&amp;entry_no=&amp;type_=&amp;password=&amp;hostel=</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.10.3-stable+timestamp.2015.04.02.21.42.07</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0030D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x02C101F0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x06C0C6B0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0030D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x02C101F0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x06C0C6B0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\applications\\MoodlePlus\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>newuser</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Harshil\\\\Desktop\\\\Acads\\\\COP 290\\\\Assignment 1\\\\moodle-plus\\\\applications\\\\MoodlePlus\\\\&#x27;, &#x27;C:\\\\Users\\\\Harshil\\\\Desktop\\\\Acads\\\\COP 290\\\\Assignment 1\\\\moodle-plus\\\\applications\\\\admin\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1f53300: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;2001:0:9d38:90d7:188d:719:f53f:f918&#x27;, &#x27;10.192.6.231&#x27;, &#x27;fe80::188d:719:f53f:f918%7&#x27;, &#x27;fe80::840:2412:40d7:393f%5&#x27;, &#x27;fe80::c977:e3a8:3196:b8a7%18&#x27;, &#x27;192.168.56.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;admin&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Harshil\\\\Desktop\\\\Acads\\\\COP 290\\\\Assignment 1\\\\moodle-plus&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>2001:0:9d38:90d7:188d:719:f53f:f918</div></td></tr><tr><td><div>fe80::188d:719:f53f:f918%7</div></td></tr><tr><td><div>admin</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::840:2412:40d7:393f%5</div></td></tr><tr><td><div>10.192.6.231</div></td></tr><tr><td><div>192.168.56.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>fe80::c977:e3a8:3196:b8a7%18</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.10.3-stable+timestamp.2015.04.02.21.42.07</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 6, 23, 14, 1, 257000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/default/newuser.json</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 6, 17, 44, 1, 257000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>MoodlePlus/10.192.18.230.2016-04-06.23-14-01.b0f954df-2342-472c-9e5b-59a210a728d6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x07DAA810&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 08231AD0, file "C:\\User...ions\\MoodlePlus\\controllers/default.py", line 11>'
p73
ssS'lnum'
p74
I227
sS'lines'
p75
(dp76
I224
S'            ccode = code'
p77
sI225
S'        else:'
p78
sI226
S'            ccode = compile2(code, layer)'
p79
sI227
S'        exec ccode in environment'
p80
sI228
S'    except HTTP:'
p81
sI229
S'        raise'
p82
sI230
S'    except RestrictedError:'
p83
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p84
sI222
S'    try:'
p85
sI223
S'        if isinstance(code, types.CodeType):'
p86
ssS'call'
p87
S'(code=\'# -*- coding: utf-8 -*-\\n# this file is released ...   """\\n\\nresponse._vars=response._caller(newuser)\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'ANY_OF\': <class \'gluon.validators.ANY_OF\'>, \'ASSIGNJS\': <function ASSIGNJS>, \'AppConfig\': <function AppConfig>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, ...}, layer=r\'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignmen...us\\applications\\MoodlePlus\\controllers/default.py\')'
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\applications\\MoodlePlus\\controllers\\default.py'
p92
sg68
(dp93
sg74
I597
sg75
(dp94
I586
S'Url: /threads/new.json'
p95
sI587
S'Input params:'
p96
sI588
S"    title: (string) can't be empty"
p97
sI589
S"    description: (string) can't be empty"
p98
sI590
S'    course_code: (string) must be a registered courses'
p99
sI591
S'Output params:'
p100
sI592
S'    success: (bool) True or False depending on whether thread was posted'
p101
sI593
S'    thread_id: (bool) id of new thread created'
p102
sI594
S''
sI595
S'    """'
p103
ssg87
S'()'
p104
sg89
S'<module>'
p105
sa(dp106
g66
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\globals.py'
p107
sg68
(dp108
S'self'
p109
S'undefined'
p110
sS'f'
S'<function newuser>'
p111
ssg74
I393
sg75
(dp112
I388
S"        self.flash = ''            # used by the default view layout"
p113
sI389
S'        self.meta = Storage()      # used by web2py_ajax.html'
p114
sI390
S'        self.menu = []             # used by the default view layout'
p115
sI391
S'        self.files = []            # used by web2py_ajax.html'
p116
sI392
S'        self._vars = None'
p117
sI393
S'        self._caller = lambda f: f()'
p118
sI394
S'        self._view_environment = None'
p119
sI395
S'        self._custom_commit = None'
p120
sI396
S'        self._custom_rollback = None'
p121
sI397
S"        self.generic_patterns = ['*']"
p122
ssg87
S'(f=<function newuser>)'
p123
sg89
S'<lambda>'
p124
sa(dp125
g66
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\tools.py'
p126
sg68
(dp127
S'action'
p128
S'<function newuser>'
p129
sS'a'
S'()'
p130
sS'b'
g21
ssg74
I3440
sg75
(dp131
I3435
S'                    flag = condition'
p132
sI3436
S'                if not flag:'
p133
sI3437
S'                    current.session.flash = self.messages.access_denied'
p134
sI3438
S'                    return call_or_redirect('
p135
sI3439
S'                        self.settings.on_failed_authorization)'
p136
sI3440
S'                return action(*a, **b)'
p137
sI3441
S'            f.__doc__ = action.__doc__'
p138
sI3442
S'            f.__name__ = action.__name__'
p139
sI3443
S'            f.__dict__.update(action.__dict__)'
p140
sI3444
S'            return f'
p141
ssg87
S'(*a=(), **b={})'
p142
sg89
S'f'
sa(dp143
g66
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\applications\\MoodlePlus\\controllers\\default.py'
p144
sg68
(dp145
S'username'
p146
S"''"
p147
sS'first_name'
p148
S"''"
p149
sS'last_name'
p150
S"''"
p151
sS'db.users'
p152
S'<Table users (id,first_name,last_name,email,user...n_key,reset_password_key,registration_id,hostel)>'
p153
sS'entry_no'
p154
S"''"
p155
sS'type_'
p156
S"''"
p157
sS'global db'
p158
S'<DAL uri="sqlite://storage.sqlite">'
p159
sS'db.users.insert'
p160
S'<bound method Table.insert of <Table users (id,f..._key,reset_password_key,registration_id,hostel)>>'
p161
sS'password'
p162
S"''"
p163
sS'email'
p164
S"''"
p165
sS'hostel'
p166
S"''"
p167
ssg74
I140
sg75
(dp168
I135
S'        raise e'
p169
sI136
S'    try:'
p170
sI137
S'        hostel = str(request.vars["hostel"])'
p171
sI138
S'    except Exception, e:'
p172
sI139
S'        raise e'
p173
sI140
S'    db.users.insert(first_name=first_name,last_name=last_name,email=email,username=username,entry_no=entry_no,type_=type_,password=password,hostel=hostel)'
p174
sI141
S'    return dict(val=db.users())'
p175
sI142
S''
sI143
S"'''"
p176
sI144
S'def new_resource():'
p177
ssg87
S'()'
p178
sg89
S'newuser'
p179
sa(dp180
g66
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\packages\\dal\\pydal\\objects.py'
p181
sg68
(dp182
S'self._listify'
p183
S'<bound method Table._listify of <Table users (id..._key,reset_password_key,registration_id,hostel)>>'
p184
sS'fields'
p185
S"{'email': '', 'entry_no': '', 'first_name': '', 'hostel': '', 'last_name': '', 'password': '', 'registration_id': '', 'registration_key': '', 'reset_password_key': '', 'type_': '', ...}"
p186
sS'self'
p187
S'<Table users (id,first_name,last_name,email,user...n_key,reset_password_key,registration_id,hostel)>'
p188
sS'ret'
p189
g110
sS'self._db._adapter'
p190
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p191
sS'self._db._adapter.insert'
p192
S'<bound method SQLiteAdapter.insert of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p193
sS'self._db'
p194
S'<DAL uri="sqlite://storage.sqlite">'
p195
ssg74
I745
sg75
(dp196
I740
S''
sI741
S'    def insert(self, **fields):'
p197
sI742
S'        fields = self._defaults(fields)'
p198
sI743
S'        self._attempt_upload(fields)'
p199
sI744
S'        if any(f(fields) for f in self._before_insert): return 0'
p200
sI745
S'        ret =  self._db._adapter.insert(self, self._listify(fields))'
p201
sI746
S'        if ret and self._after_insert:'
p202
sI747
S'            fields = Row(fields)'
p203
sI748
S'            [f(fields,ret) for f in self._after_insert]'
p204
sI749
S'        return ret'
p205
ssg87
S"(self=<Table users (id,first_name,last_name,email,user...n_key,reset_password_key,registration_id,hostel)>, **fields={'email': '', 'entry_no': '', 'first_name': '', 'hostel': '', 'last_name': '', 'password': '', 'registration_id': '', 'registration_key': '', 'reset_password_key': '', 'type_': '', ...})"
p206
sg89
S'insert'
p207
sa(dp208
g66
S'C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p209
sg68
(dp210
S'e'
S"IntegrityError('column entry_no is not unique',)"
p211
ssg74
I727
sg75
(dp212
I722
S'            self.execute(query)'
p213
sI723
S'        except Exception:'
p214
sI724
S'            e = sys.exc_info()[1]'
p215
sI725
S"            if hasattr(table,'_on_insert_error'):"
p216
sI726
S'                return table._on_insert_error(table,fields,e)'
p217
sI727
S'            raise e'
p218
sI728
S"        if hasattr(table, '_primarykey'):"
p219
sI729
S'            mydict = dict([(k[0].name, k[1]) for k in fields if k[0].name in table._primarykey])'
p220
sI730
S'            if mydict != {}:'
p221
sI731
S'                return mydict'
p222
ssg87
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, table=<Table users (id,first_name,last_name,email,user...n_key,reset_password_key,registration_id,hostel)>, fields=[(<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, '')])"
p223
sg89
g207
sasS'pyver'
p224
S'Python 2.7.9: C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\web2py.exe (prefix: C:\\Python27)'
p225
sS'session'
p226
g61
(S'sw\t\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>53d18d29-9b63-4de2-b98d-64a67017914d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 6, 23, 13, 56, 254000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>superuser@cse.iitd.ac.in</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">entry_no</td><td style="vertical-align:top;">:</td><td><div>superuser</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>super</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hostel</td><td style="vertical-align:top;">:</td><td><div>1L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>8L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">type_</td><td style="vertical-align:top;">:</td><td><div>0L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>superuser</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr></table></div></td></tr></table></div>'
tRp227
sS'etype'
p228
S"<class 'sqlite3.IntegrityError'>"
p229
sS'date'
p230
S'Wed Apr 06 23:14:01 2016'
p231
sS'response'
p232
g61
(S's\xec\x1e\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x07DAA8C0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_moodleplus</td><td style="vertical-align:top;">:</td><td><div>10.192.18.230-9da07c78-5645-458e-bd7e-a40614e62df8<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand" href="/" id="web2py-logo"><b>Moodle&nbsp;<span>Plus</span></b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/index.json</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>My Course</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/courses/index.json</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/newuser/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>10.192.18.230</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_moodleplus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;C:\\\\Users\\\\Harshil\\\\Desktop\\\\Acads\\\\COP 290\\\\Assignment 1\\\\moodle-plus\\\\applications\\\\MoodlePlus\\\\sessions\\\\162\\\\061\\\\10.192.18.230-9da07c78-5645-458e-bd7e-a40614e62df8&#x27;, mode &#x27;rb+&#x27; at 0x06CADE38&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\applications\\MoodlePlus\\sessions\\10.192.18.230-9da07c78-5645-458e-bd7e-a40614e62df8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>61ac5abe6b02be5f019b5eba3933548b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>10.192.18.230-9da07c78-5645-458e-bd7e-a40614e62df8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_moodleplus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>MoodlePlus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Moodleplus</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/newuser.json</div></td></tr></table></div>'
tRp233
sS'locals'
p234
(dp235
S'query'
p236
S'"INSERT INTO users(username,first_name,last_name,...l) VALUES (\'\',\'\',\'\',\'\',\'\',\'\',NULL,\'\',\'\',\'\',NULL);"'
p237
sS'self'
p238
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p239
sS'e'
S"IntegrityError('column entry_no is not unique',)"
p240
sS'fields'
p241
S"[(<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, ''), (<pydal.objects.Field object>, '')]"
p242
sS'table'
p243
S'<Table users (id,first_name,last_name,email,user...n_key,reset_password_key,registration_id,hostel)>'
p244
sssS'traceback'
p245
S'Traceback (most recent call last):\n  File "C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\applications\\MoodlePlus\\controllers/default.py", line 597, in <module>\n  File "C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\tools.py", line 3440, in f\n    return action(*a, **b)\n  File "C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\applications\\MoodlePlus\\controllers/default.py", line 140, in newuser\n    db.users.insert(first_name=first_name,last_name=last_name,email=email,username=username,entry_no=entry_no,type_=type_,password=password,hostel=hostel)\n  File "C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\packages\\dal\\pydal\\objects.py", line 745, in insert\n    ret =  self._db._adapter.insert(self, self._listify(fields))\n  File "C:\\Users\\Harshil\\Desktop\\Acads\\COP 290\\Assignment 1\\moodle-plus\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 727, in insert\n    raise e\nIntegrityError: column entry_no is not unique\n'
p246
s.